<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>redis on Vladimir Lukiyanov</title>
    <link>https://vlukiyanov.github.io/tags/redis/</link>
    <description>Recent content in redis on Vladimir Lukiyanov</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-GB</language>
    <lastBuildDate>Fri, 27 Nov 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://vlukiyanov.github.io/tags/redis/index.xml" rel="self" type="application/rss+xml" />
    
    
    
    <item>
      <title>Exploring Redis streams with Akka streams</title>
      <link>https://vlukiyanov.github.io/exploring-redis-streams-with-akka-streams/</link>
      <pubDate>Fri, 27 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://vlukiyanov.github.io/exploring-redis-streams-with-akka-streams/</guid>
      <description>Redis is an in-memory database and Akka streams is a popular reactive streams implementation for Scala. In this post we explore a simple end-to-end toy example to demonstrate using Redis streams in Akka streams via the popular Java library Lettuce. The repo vlukiyanov/akka-redis-streams-example contains the complete code for the examples below.
The Redis streams data structure implements a persistent log with support for consumer groups, and is designed to fan out messages to multiple consumers.</description>
    </item>
    
    
    
    
  </channel>
</rss>
